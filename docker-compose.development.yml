services:
  # Init container per processare tutti i template di configurazione
  config-processor:
    image: alpine:latest
    container_name: config-processor
    env_file:
      - .env
    volumes:
      - ./radarr:/radarr-templates:ro
      - ./sonarr:/sonarr-templates:ro
      - ./flemmarr:/flemmarr-templates:ro
      - radarr_config:/radarr-config
      - sonarr_config:/sonarr-config
      - ./flemmarr:/flemmarr-config
      - ./jellyfin:/jellyfin-config
      - ./jellyseer:/jellyseer-config
      - ./config-processor:/scripts
    command: ["/scripts/process-configs.sh"]

  # For downloading torrents
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    ports:
      - ${QBITTORRENT_PORT}:8080
    environment:
      - TZ=${TZ}
      - WEBUI_PORT=${QBITTORRENT_PORT}
      - UMASK=022
    volumes:
      - qbittorrent_config:/config
      - qbittorrent_downloads:/downloads
      - ./qbittorrent/qBittorrent.conf:/config/qBittorrent/qBittorrent.conf:ro
    restart: always

  # For configuring all Arr services
  flemmarr:
    image: pierremesure/flemmarr:latest
    container_name: flemmarr
    env_file:
      - .env
    volumes:
      - ./flemmarr:/config
    depends_on:
      config-processor:
        condition: service_completed_successfully
      sonarr:
        condition: service_started
      radarr:
        condition: service_started
      prowlarr:
        condition: service_started
      bazarr:
        condition: service_started
      qbittorrent:
        condition: service_started

  # For managing TV shows
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    ports:
      - ${SONARR_PORT}:8989
    environment:
      - TZ=${TZ}
    env_file:
      - .env
    volumes:
      - sonarr_config:/config
      - ./data:/data
      - qbittorrent_downloads:/downloads
    restart: unless-stopped
    depends_on:
      config-processor:
        condition: service_completed_successfully
      qbittorrent:
        condition: service_started

  # For managing movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    ports:
      - ${RADARR_PORT}:7878
    environment:
      - TZ=${TZ}
    env_file:
      - .env
    volumes:
      - radarr_config:/config
      - ./data:/data
      - qbittorrent_downloads:/downloads
    restart: unless-stopped
    depends_on:
      config-processor:
        condition: service_completed_successfully

  # For managing requests
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    ports:
      - ${JELLYSEERR_PORT}:5055
    environment:
      - TZ=${TZ}
    volumes:
      - ./jellyseer:/app/config
    restart: unless-stopped
    depends_on:
      config-processor:
          condition: service_completed_successfully

  # Media server
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    ports:
      - ${JELLYFIN_PORT}:8096 # interfaccia web
      - ${JELLYFIN_HTTPS_PORT}:8920 # https opzionale
    environment:
      - TZ=${TZ}
    volumes:
      - ./jellyfin:/config      # Bind mount diretto alla cartella Git
      - ./data:/data
    restart: unless-stopped
    depends_on:
      config-processor:
        condition: service_completed_successfully

  # For bypassing Cloudflare
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    ports:
      - ${FLARESOLVERR_PORT}:8191
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_HTML=${LOG_HTML}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER}
      - TZ=${TZ}
    restart: unless-stopped

  # For subtitles
  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    ports:
      - ${BAZARR_PORT}:6767
    environment:
      - TZ=${TZ}
    volumes:
      - bazarr_config:/config
      - ./data:/data
    restart: unless-stopped

  # For searching indexers
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    ports:
      - ${PROWLARR_PORT}:9696
    environment:
      - TZ=${TZ}
    volumes:
      - prowlarr_config:/config
    restart: unless-stopped

volumes:
  qbittorrent_config:
  qbittorrent_downloads:
  sonarr_config:
  radarr_config:
  bazarr_config:
  prowlarr_config:
