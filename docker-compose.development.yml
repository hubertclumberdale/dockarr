services:
  # Gluetun VPN service for protecting downloading services
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - ${QBITTORRENT_PORT}:8080 # qBittorrent WebUI
      - 8888:8888/tcp # Gluetun control server
    environment:
      # VPN Provider Configuration
      - VPN_SERVICE_PROVIDER=nordvpn
      - OPENVPN_USER=${NORDVPN_USERNAME}
      - OPENVPN_PASSWORD=${NORDVPN_PASSWORD}
      - SERVER_COUNTRIES=${NORDVPN_COUNTRY:-United States}

      # Network Configuration
      - FIREWALL=on
      - FIREWALL_VPN_INPUT_PORTS=8080
      - FIREWALL_INPUT_PORTS=8888
      - DOT=on
      - DOT_PROVIDERS=cloudflare

      # Health check
      - HEALTH_VPN_DURATION_INITIAL=30s
      - HEALTH_SUCCESS_WAIT_DURATION=5s

      # Timezone
      - TZ=${TZ}
    volumes:
      - ./gluetun:/gluetun
    networks:
      dockarr-network:
        aliases:
          - qbittorrent # Allow other containers to reach qBittorrent through gluetun
    restart: unless-stopped

  config-processor:
    image: alpine:latest
    container_name: config-processor
    env_file:
      - .env
    volumes:
      - ./radarr:/radarr-templates:ro
      - ./sonarr:/sonarr-templates:ro
      - ./flemmarr:/flemmarr-templates:ro
      - radarr_config:/radarr-config
      - sonarr_config:/sonarr-config
      - ./flemmarr:/flemmarr-config
      - ./jellyfin:/jellyfin-config
      - ./jellyseer:/jellyseer-config
      - ./config-processor:/scripts
    command: ["/scripts/process-configs.sh"]
    networks:
      - dockarr-network

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:gluetun
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - UMASK=022
    volumes:
      - qbittorrent_config:/config
      - ${DATA_PATH}:/data/media # media condivisa
      - ${DATA_PATH}/downloads:/downloads # qBittorrent downloads
      - ./qbittorrent/qBittorrent.conf:/config/qBittorrent/qBittorrent.conf:ro
    restart: unless-stopped
    depends_on:
      gluetun:
        condition: service_healthy

  flemmarr:
    image: pierremesure/flemmarr:latest
    container_name: flemmarr
    env_file:
      - .env
    volumes:
      - ./flemmarr:/config
      - ${DATA_PATH}:/data/media
    depends_on:
      config-processor:
        condition: service_completed_successfully
      sonarr:
        condition: service_started
      radarr:
        condition: service_started
      prowlarr:
        condition: service_started
      bazarr:
        condition: service_started
      qbittorrent:
        condition: service_started
    networks:
      - dockarr-network

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    ports:
      - ${SONARR_PORT}:8989
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ}
    env_file:
      - .env
    volumes:
      - sonarr_config:/config
      - ${DATA_PATH}:/data/media
      - ${DATA_PATH}/downloads:/downloads
    restart: unless-stopped
    depends_on:
      config-processor:
        condition: service_completed_successfully
    networks:
      - dockarr-network

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    ports:
      - ${RADARR_PORT}:7878
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ}
    env_file:
      - .env
    volumes:
      - radarr_config:/config
      - ${DATA_PATH}:/data/media
      - ${DATA_PATH}/downloads:/downloads
    restart: unless-stopped
    depends_on:
      config-processor:
        condition: service_completed_successfully
    networks:
      - dockarr-network

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    ports:
      - ${JELLYSEERR_PORT}:5055
    environment:
      - TZ=${TZ}
    volumes:
      - ./jellyseer:/app/config
      - ${DATA_PATH}:/data/media # per accesso film/serie
    restart: unless-stopped
    depends_on:
      config-processor:
        condition: service_completed_successfully
    networks:
      - dockarr-network

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - "${GPU_GID}"
    ports:
      - ${JELLYFIN_PORT}:8096
      - ${JELLYFIN_HTTPS_PORT}:8920
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ}
    volumes:
      - ./jellyfin:/config
      - ${DATA_PATH}:/data/media
    restart: unless-stopped
    depends_on:
      config-processor:
        condition: service_completed_successfully
    networks:
      - dockarr-network

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    ports:
      - ${FLARESOLVERR_PORT}:8191
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_HTML=${LOG_HTML}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER}
      - TZ=${TZ}
    restart: unless-stopped
    networks:
      - dockarr-network

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    ports:
      - ${BAZARR_PORT}:6767
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ}
    volumes:
      - bazarr_config:/config
      - ${DATA_PATH}:/data/media
    restart: unless-stopped
    networks:
      - dockarr-network

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    ports:
      - ${PROWLARR_PORT}:9696
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ}
    volumes:
      - prowlarr_config:/config
    restart: unless-stopped
    networks:
      - dockarr-network

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - ${DOZZLE_PORT}:8080
    restart: unless-stopped
    networks:
      - dockarr-network

volumes:
  qbittorrent_config:
  qbittorrent_downloads:
  sonarr_config:
  radarr_config:
  bazarr_config:
  prowlarr_config:

networks:
  dockarr-network:
    driver: bridge
